version: 2.1
orbs:
  gcp-gcr: circleci/gcp-gcr@0.6.1
  cloudrun: circleci/gcp-cloud-run@1.0.0
executors:
  node:
    description: Node 12
    docker:
      - image: circleci/node:12
    working_directory: ~/app
commands:
  load:
    steps:
      - checkout
      - attach_workspace:
          at: ~/app
  install:
    parameters:
      module_path:
        type: string
        default: './node_modules'
    steps:
      - run: npm install
      - persist_to_workspace:
          root: ~/app
          paths:
            - << parameters.module_path >>
  lint:
    steps:
      - run: npm run lint
  build_and_deploy:
    steps:
      - setup_remote_docker
      - run:
          name: Setup env
          command: |
            echo 'export PATH=~$PATH:~/.local/bin' >> $BASH_ENV
            echo ${GCP_PROJECT_KEY} | base64 --decode --ignore-garbage > $HOME/gcloud-service-key.json
            echo 'export GOOGLE_CLOUD_KEYS=$(cat $HOME/gcloud-service-key.json)' >> $BASH_ENV
            echo 'export TAG=${CIRCLE_SHA1}' >> $BASH_ENV
            echo 'export IMAGE_NAME=$CIRCLE_PROJECT_REPONAME' >> $BASH_ENV && source $BASH_ENV
      - run:
          name: Build Docker image
          command: |
            docker build -t us.gcr.io/$GOOGLE_PROJECT_ID/$IMAGE_NAME -t us.gcr.io/$GOOGLE_PROJECT_ID/$IMAGE_NAME:$TAG .
      - gcp-gcr/gcr-auth:
          gcloud-service-key: GOOGLE_CLOUD_KEYS
          google-project-id: GOOGLE_PROJECT_ID
          google-compute-zone: GOOGLE_COMPUTE_ZONE
      - gcp-gcr/push-image:
          google-project-id: GOOGLE_PROJECT_ID
          registry-url: 'us.gcr.io'
          image: $IMAGE_NAME
      - cloudrun/deploy:
          platform: 'managed'
          image: 'us.gcr.io/$GOOGLE_PROJECT_ID/$IMAGE_NAME'
          service-name: 'pokedex'
          region: $GOOGLE_COMPUTE_ZONE
          unauthenticated: true
jobs:
  install:
    executor: node
    steps:
      - load
      - install
  lint:
    executor: node
    steps:
      - load
      - lint
  deploy:
    executor: node
    steps:
      - load
      - build_and_deploy
workflows:
  all:
    jobs:
      - install
      - lint:
          requires:
            - install
      - deploy:
          requires:
            - lint
          filters:
            branches:
              only:
                - master
